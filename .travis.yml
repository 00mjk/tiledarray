# See http://about.travis-ci.org/docs/user/build-configuration/
# To validate this file: http://lint.travis-ci.org/

language: cpp
dist: bionic
cache: ccache
cache:
  directories:
  - /home/travis/_install
os: linux

addons:
  apt:
    sources: &clang7_sources
    - llvm-toolchain-bionic-7
    sources: &clang8_sources
    - llvm-toolchain-bionic-8
    packages: &base_packages
    - libboost-all-dev
    - libblas-dev
    - liblapack-dev
    - liblapacke-dev
    - libtbb-dev
    - cmake
    - cmake-data
    - lcov

env:
  global:
    - BUILD_PREFIX=/home/travis/_build
    - INSTALL_PREFIX=/home/travis/_install
    - secure: "gn5Ci/V8HnbIELZcM/LNppboJ/pw8fb6uat9x8iKTs4d7MPkKzvzuwWZq06AU7tezZpDg0O+ILKulPihwTh25HhYaE+jGIQzfLbao3cwHkEqDqBWL52jberpytphOaoie53iUHyiUV0c7dMx1NuHg97sq8aWeFT7dbI8ef32xD0="

matrix:
  fast_finish: true
  include:
    - compiler: gcc
      env: GCC_VERSION=6 BUILD_TYPE=Debug
      addons:
        apt:
          packages:
           - *base_packages
           - g++-6
           - gfortran-6
    - compiler: gcc
      env: GCC_VERSION=6 BUILD_TYPE=Release
      addons:
        apt:
          packages:
           - *base_packages
           - g++-6
           - gfortran-6
    - compiler: gcc
      env: GCC_VERSION=7 BUILD_TYPE=Debug
      addons:
        apt:
          packages:
           - *base_packages
           - g++-7
           - gfortran-7
    - compiler: gcc
      env: GCC_VERSION=7 BUILD_TYPE=Release
      addons:
        apt:
          packages:
           - *base_packages
           - g++-7
           - gfortran-7
    - compiler: gcc
      env: GCC_VERSION=8 BUILD_TYPE=Debug
      addons:
        apt:
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
    - compiler: gcc
      env: GCC_VERSION=8 BUILD_TYPE=Release
      addons:
        apt:
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
    - compiler: gcc
      env: GCC_VERSION=9 BUILD_TYPE=Debug
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *base_packages
            - g++-9
            - gfortran-9
    - compiler: gcc
      env: GCC_VERSION=9 BUILD_TYPE=Release
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *base_packages
            - g++-9
            - gfortran-9
    - compiler: clang
      env: CLANG_VERSION=7 GCC_VERSION=8 BUILD_TYPE=Debug
      addons:
        apt:
          sources:
           - *clang7_sources
          packages:
           - *base_packages
           - g++-8
           - gfortran-8
           - clang-7
           - libc++-7-dev
           - libc++abi-7-dev
    - compiler: clang
      env: CLANG_VERSION=7 GCC_VERSION=8 BUILD_TYPE=Release
      addons:
        apt:
          sources:
           - *clang7_sources
          packages:
           - *base_packages
           - g++-8
           - gfortran-8
           - clang-7
           - libc++-7-dev
           - libc++abi-7-dev
    - compiler: clang
      env: CLANG_VERSION=8 GCC_VERSION=8 BUILD_TYPE=Debug
      addons:
        apt:
          sources:
            - *clang8_sources
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
    - compiler: clang
      env: CLANG_VERSION=8 GCC_VERSION=8 BUILD_TYPE=Release
      addons:
        apt:
          sources:
            - *clang8_sources
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - graphviz # provides dot for doxygen graphs
            - fonts-liberation # recommended by graphviz
    - compiler: clang
      env: CLANG_VERSION=9 GCC_VERSION=8 BUILD_TYPE=Debug
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
            - clang-9
            - libc++-9-dev
            - libc++abi-9-dev
    - compiler: clang
      env: CLANG_VERSION=9 GCC_VERSION=8 BUILD_TYPE=Release
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *base_packages
            - g++-8
            - gfortran-8
            - clang-9
            - libc++-9-dev
            - libc++abi-9-dev

#notifications:
#  email:
#    recipients:
#      - @github.com
#    on_success: change
#    on_failure: always
before_install:
  - env
  - mkdir -p ${BUILD_PREFIX} && mkdir -p ${INSTALL_PREFIX}
# use timeout to stop long-running (i.e. cache-rebuilding) jobs right before they get killed by Travis-CI
# in case of timeout report success to Travis to force cache upload
script:
  - travis_wait 50 timeout 2200 ./bin/build-$TRAVIS_OS_NAME.sh;  RESULT=$?; if [ $RESULT -eq 0 ] || [ $RESULT -eq 124 ]; then true; else false; fi;
after_failure:
  - cat ${BUILD_PREFIX}/TA/external/build/madness/CMakeFiles/CMakeError.log
  - cat ${BUILD_PREFIX}/TA/external/build/madness/CMakeFiles/CMakeOutput.log
  - cat ${BUILD_PREFIX}/TA/CMakeFiles/CMakeError.log
  - cat ${BUILD_PREFIX}/TA/CMakeFiles/CMakeOutput.log
# codecov
after_success:
  # create report
  - cd ${TRAVIS_BUILD_DIR}
  - if [ "$BUILD_TYPE" = "Debug" ] && [ "$GCC_VERSION" = 6 ]; then lcov --gcov-tool gcov-${GCC_VERSION} --directory ${BUILD_PREFIX}/TA --capture --output-file coverage.info; fi; # capture coverage info
  - if [ "$BUILD_TYPE" = "Debug" ] && [ "$GCC_VERSION" = 6 ]; then lcov --remove coverage.info '/usr/*' '*/madness/*' '*/btas/*' '*/tests/*' --output-file coverage.info; fi; # filter out non-project files
  - if [ "$BUILD_TYPE" = "Debug" ] && [ "$GCC_VERSION" = 6 ]; then lcov --list coverage.info; fi; #debug info
  - echo ${TRAVIS_CMD}
  # upload report to CodeCov
  - if [ "$BUILD_TYPE" = "Debug" ] && [ "$GCC_VERSION" = 6 ]; then bash <(curl -s https://codecov.io/bash) -t token; fi;
  # generate docs
  - if [ "$BUILD_TYPE" = "${DEPLOY_BUILD_TYPE}" ] && [ "$CLANG_VERSION" = "${DEPLOY_CLANG_VERSION}" ]; then bash ./bin/deploy-$TRAVIS_OS_NAME.sh; fi;

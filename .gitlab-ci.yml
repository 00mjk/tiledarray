stages:
  - build

default:
  # timeout: 3h # NB doesnt work as of 1/2021
  interruptible: true

variables:
  MAD_NUM_THREADS : 2
  TA_CI_TARGETS : "tiledarray examples ta_test check"
  TA_CI_CONFIG : >
                 TA_BUILD_UNITTEST=TRUE
                 CMAKE_BUILD_TYPE=${BUILD_TYPE}
                 ${TA_PYTHON}
                 ${ENABLE_CUDA}
                 ${BLA_VENDOR}
                 ${ENABLE_SCALAPACK}

before_script:
  - echo 'localhost slots=2' > /etc/openmpi/openmpi-default-hostfile
  - echo "CI_RUNNER_TAGS=$CI_RUNNER_TAGS"
  # NB: tag parsing below is not robust
  - CMAKE_BUILD_PARALLEL_LEVEL=$(echo $CI_RUNNER_TAGS | sed -n 's/CMAKE_BUILD_PARALLEL_LEVEL=\([0-9]\+\).*/\1/p')
  - export CMAKE_BUILD_PARALLEL_LEVEL=${CMAKE_BUILD_PARALLEL_LEVEL:=1}
  - echo "CMAKE_BUILD_PARALLEL_LEVEL=$CMAKE_BUILD_PARALLEL_LEVEL"
  - |-
    if [[ "$BLA_VENDOR" == "BLA_VENDOR=Intel10"* ]]; then
      # apt-get install -yq intel-mkl-core-c-2020.4-304
      # source /opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/bin/mklvars.sh intel64
      make -C /home/ValeevGroup install/intel-mkl
      source /opt/intel/mkl/bin/mklvars.sh intel64
      echo "MKLROOT=$MKLROOT"
    fi
  - |-
    if [[ "$ENABLE_CUDA" == "ENABLE_CUDA=ON" ]]; then
      make -C /home/ValeevGroup install/cuda
      export CUDACXX=/usr/local/cuda/bin/nvcc
    fi

ubuntu:
  stage: build
  tags: [ docker ]
  timeout: 3h
  image: valeevgroup/${IMAGE}
  variables:
    TA_PYTHON : "TA_PYTHON=ON"
    ENABLE_SCALAPACK : "ENABLE_SCALAPACK=OFF"
  script:
    - mkdir build
    - cd build
    # !!! Unset env vars that may conflict with build, eg FindBLAS uses $ENV{BLA_VENDOR}
    - unset BUILD_TYPE TA_PYTHON BLA_VENDOR ENABLE_SCALAPACK ENABLE_CUDA
    - ../bin/gitlab-ci.sh ..
        ${TA_CI_TARGETS}
        ${TA_CI_CONFIG}
        MPIEXEC_PREFLAGS='--bind-to;none;--allow-run-as-root'
        blacs_LIBRARIES=scalapack-openmpi
        scalapack_LIBRARIES=scalapack-openmpi
        #lapack_LIBRARIES=lapack
  parallel:
    matrix:
      - IMAGE : [ "ubuntu:18.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release" ]
        BLA_VENDOR : [ "BLA_VENDOR=Intel10_64lp_seq", "BLA_VENDOR=Intel10_64lp" ]
        # ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
        TA_PYTHON : [ "TA_PYTHON=OFF" ] # needs to be fixed for MKL
      - IMAGE : [ "ubuntu:18.04", "ubuntu:20.04" ]
        CXX: [ g++, clang++-9 ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
      - IMAGE : [ "ubuntu:18.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_CUDA : [ "ENABLE_CUDA=ON" ]
        TA_CI_TARGETS : [ "tiledarray examples" ]
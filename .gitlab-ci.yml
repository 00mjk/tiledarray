stages:
  - build

default:
  tags: [ docker ]

before_script:
  - echo 'localhost slots=8' > /etc/openmpi/openmpi-default-hostfile
  - apt-get install -yq intel-mkl-core-c-2020.4-304

build:
  stage: build
  timeout: 3h
  interruptible: true
  image: valeevgroup/${IMAGE}
  variables:
    CXX: ${CXX}
    TA_PYTHON : "TA_PYTHON=OFF"
    BLAS : ""
    ENABLE_SCALAPACK : "ENABLE_SCALAPACK=OFF"
  script:
    - mkdir build
    - cd build
    - |-
      if [[ "X$BLAS" != "X" ]]; then
        source /opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/bin/mklvars.sh intel64
      fi
    - ../bin/gitlab-ci.sh ..
        CMAKE_BUILD_TYPE=${BUILD_TYPE}
        ${TA_PYTHON}
        ${ENABLE_SCALAPACK}
        ${BLAS}
        MPIEXEC_PREFLAGS="--allow-run-as-root"
        blacs_LIBRARIES=scalapack-openmpi
        scalapack_LIBRARIES=scalapack-openmpi
        lapack_LIBRARIES=lapack
  parallel:
    matrix:
      - IMAGE : [ "ubuntu:20.04" ]
        CXX: [ g++, clang++-9 ]
        BUILD_TYPE : [ "Release", "Debug" ]
        BLAS : [ "-DBLA_VENDOR=Intel10_64lp_seq", "-DBLA_VENDOR=Intel10_64lp", "" ]
        ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
      - IMAGE : [ "ubuntu:18.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release", "Debug" ]
        TA_PYTHON : [ "TA_PYTHON=ON" ]

stages:
  - build

default:
  tags: [ docker ]

variables:
  # to run OpenMPI in docker
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  OMPI_MCA_btl_vader_single_copy_mechanism: none

before_script:
  - echo 'localhost slots=8' > /etc/openmpi/openmpi-default-hostfile
  - apt-get install -yq intel-mkl-core-c-2020.4-304
  - ln -s /opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/ /opt/intel/
  - if [ "$IMAGE" == "ubuntu:18.04" ]; then dpkg -P libeigen3-dev; fi

build:
  stage: build
  timeout: 3h
  interruptible: true
  image: valeevgroup/${IMAGE}
  variables:
    CXX: ${CXX}
    ENABLE_MKL : "ENABLE_MKL=OFF"
    ENABLE_SCALAPACK : "ENABLE_SCALAPACK=OFF"
  script:
    - mkdir build
    - cd build
    - ../bin/gitlab-ci.sh ..
        CMAKE_BUILD_TYPE=${BUILD_TYPE}
        ${TA_PYTHON}
        ${ENABLE_MKL}
        ${ENABLE_SCALAPACK}
        blacs_LIBRARIES=scalapack-openmpi
        scalapack_LIBRARIES=scalapack-openmpi
        lapack_LIBRARIES=lapack
  parallel:
    matrix:
      - IMAGE : [ "ubuntu:20.04" ]
        CXX: [ g++, clang++-9 ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_MKL : [ "ENABLE_MKL=ON", "ENABLE_MKL=OFF" ]
        ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
      - IMAGE : [ "ubuntu:18.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release", "Debug" ]
        TA_PYTHON : [ "TA_PYTHON=ON" ]

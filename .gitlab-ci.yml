stages:
  - build

default:
  tags: [ docker ]

variables:
  # to run OpenMPI in docker
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  OMPI_MCA_btl_vader_single_copy_mechanism: none

before_script:
  - echo 'localhost slots=8' > /etc/openmpi/openmpi-default-hostfile
  - apt-get install -yq intel-mkl-core-c-2020.4-304
  - ln -s /opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/ /opt/intel/

build:
  stage: build
  timeout: 3h
  image: valeevgroup/${IMAGE}
  variables:
    CXX: ${CXX}
    TA_PYTHON : "TA_PYTHON=OFF"
    ENABLE_MKL : "ENABLE_MKL=OFF"
    ENABLE_SCALAPACK : "ENABLE_SCALAPACK=OFF"
  script:
    - mkdir build
    - cd build
    - ../bin/gitlab-ci.sh
        CMAKE_BUILD_TYPE=${BUILD_TYPE}
        ${TA_PYTHON}
        ${ENABLE_MKL}
        ${ENABLE_SCALAPACK}
        ${Eigen3_DIR}
  parallel:
    matrix:
      - CXX: [ g++ ]
        IMAGE : [ "ubuntu:20.04" ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_MKL : [ "ENABLE_MKL=ON", "ENABLE_MKL=OFF" ]
        ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
      - CXX: [ g++ ]
        IMAGE : [ "ubuntu:20.04" ]
        BUILD_TYPE : [ "Release", "Debug" ]
        TA_PYTHON : [ "TA_PYTHON=ON" ]
      - CXX: [ clang++-9 ]
        IMAGE : [ "ubuntu:20.04" ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_MKL : [ "ENABLE_MKL=ON", "ENABLE_MKL=OFF" ]
      - CXX: [ g++ ]
        IMAGE : [ "ubuntu:18.04" ]
        BUILD_TYPE : [ "Release", "Debug" ]
        Eigen3_DIR : [ "Eigen3_DIR=/dev/null" ]


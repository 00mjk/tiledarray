# -*- mode: cmake -*-

set(MPI_FOUND FALSE)
set(MPI_C_INCLUDE_PATH "")
set(MPI_C_LIBRARIES "")
set(MPI_C_LINKER_FLAGS "")

if(DEFINED MPI_C_COMPILER AND MPI_C_COMPILER)
  # Use the MPI compiler provided by the user to check for MPI support
  find_package(MPI)
  
  if(NOT MPI_FOUND)
    message(FATAL_ERROR "${MPI_C_COMPILER} does not appear to be a working MPI C compiler")
  endif()
  
else()

  # Try to use C and C++ compilers to detect MPI support.
  set(MPI_C_COMPILER ${CMAKE_C_COMPILER})
  set(MPI_CXX_COMPILER ${CMAKE_CXX_COMPILER})
  find_package(MPI)
  
  if (NOT MPI_FOUND)
    # Try to detect standard MPI wrapper compilers in the path.
    unset(MPI_C_COMPILER)
    unset(MPI_CXX_COMPILER)
    find_package(MPI)
  endif()

endif()

if(MPI_C_FOUND)

  # Set compiler flags using the MPI C compiler

  list(APPEND CMAKE_REQUIRED_INCLUDES ${MPI_C_INCLUDE_PATH})
  list(APPEND CMAKE_REQUIRED_LIBRARIES ${MPI_C_LIBRARIES})
    
  # Set the various flags for MPI
  include_directories(${MPI_C_INCLUDE_PATH})
  list(APPEND LINK_LIBRARIES ${MPI_C_LIBRARIES})
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MPI_C_LINKER_FLAGS}")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${MPI_C_LINKER_FLAGS}")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${MPI_C_LINKER_FLAGS}")
  set(STATIC_LIBRARY_FLAGS "${STATIC_LIBRARY_FLAGS} ${MPI_C_LINKER_FLAGS}")
  
elseif(MPI_CXX_FOUND)

  # Set compiler flags using the MPI C++ compiler

  list(APPEND CMAKE_REQUIRED_INCLUDES ${MPI_CXX_INCLUDE_PATH})
  list(APPEND CMAKE_REQUIRED_LIBRARIES ${MPI_CXX_LIBRARIES})
    
  # Set the various flags for MPI
  include_directories(${MPI_CXX_INCLUDE_PATH})
  list(APPEND LINK_LIBRARIES ${MPI_CXX_LIBRARIES})
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MPI_CXX_LINKER_FLAGS}")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${MPI_CXX_LINKER_FLAGS}")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${MPI_CXX_LINKER_FLAGS}")
  set(STATIC_LIBRARY_FLAGS "${STATIC_LIBRARY_FLAGS} ${MPI_CXX_LINKER_FLAGS}")

else()

  message(SEND_ERROR "A working MPI compiler was not found; MPI will be disabled.")

endif()

/*
 * This file is a part of TiledArray.
 * Copyright (C) 2013  Virginia Tech
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef TILEDARRAY_CONFIGURE_H__INCULDED
#define TILEDARRAY_CONFIGURE_H__INCULDED

/* Defines the default error checking behavior. none = 0, throw = 1, assert = 2 */
#undef TA_DEFAULT_ERROR

/* Defines when BLAS functions are available. */
#undef TILEDARRAY_HAS_BLAS

/* Alias BLAS cdotu function name */
#undef cdotu

/* Alias BLAS cgemm function name */
#undef cgemm

/* Alias BLAS cscal function name */
#undef cscal

/* Alias BLAS csscal function name */
#undef csscal

/* Alias BLAS ddot function name */
#undef ddot

/* Alias BLAS dgemm function name */
#undef dgemm

/* Alias BLAS dscal function name */
#undef dscal

/* Alias BLAS sdot function name */
#undef sdot

/* Alias BLAS sgemm function name */
#undef sgemm

/* Alias BLAS sscal function name */
#undef sscal

/* Alias BLAS zdotu function name */
#undef zdotu

/* Alias BLAS zdscal function name */
#undef zdscal

/* Alias BLAS zgemm function name */
#undef zgemm

/* Alias BLAS zscal function name */
#undef zscal

/* define if compiler has std::identity. */
#undef TILEDARRAY_HAS_STD_IDENTITY

/* define if compiler has std::forward. */
#undef TILEDARRAY_HAS_STD_FORWARD

/* define if compiler has std::move. */
#undef TILEDARRAY_HAS_STD_MOVE

/* define if compiler supports rvalue references. */
#undef TILEDARRAY_RVALUE_REF

/* define if compiler supports variadic templates. */
#undef TILEDARRAY_VARIADIC_TEMPLATE

/* define if compiler supports static_assert. */
#undef TILEDARRAY_HAVE_STATIC_ASSERT

/* define if compiler supports long double. */
#undef TILEDARRAY_HAS_LONG_DOUBLE

/* define if compiler supports long long. */
#undef TILEDARRAY_HAS_LONG_LONG

#endif // TILEDARRAY_CONFIGURE_H__INCULDED

/*
 *  This file is a part of TiledArray.
 *  Copyright (C) 2013  Virginia Tech
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef TILEDARRAY_CONFIG_H__INCLUDED
#define TILEDARRAY_CONFIG_H__INCLUDED

#include <madness/madness_config.h>

/* Defines a string with the Git SHA1 revision hash tag of TiledArray */
#define TILEDARRAY_REVISION "@TILEDARRAY_REVISION@"

/* Defines the default error checking behavior. none = 0, throw = 1, assert = 2 */
#define TA_DEFAULT_ERROR @TA_DEFAULT_ERROR@

/* define if compiler supports long double, the value is sizeof(long double) */
#cmakedefine TILEDARRAY_HAS_LONG_DOUBLE 1

/* define if compiler supports long long, the value is sizeof(long long) */
#cmakedefine TILEDARRAY_HAS_LONG_LONG 1

/* define if compiler supports static_assert. */
#cmakedefine TILEDARRAY_HAVE_STATIC_ASSERT 1

/* define if compiler supports variadic templates. */
#cmakedefine TILEDARRAY_HAVE_VARIADIC_TEMPLATES 1

/* Define the default alignment for arrays required by vector operations. */
#cmakedefine TILEDARRAY_ALIGNMENT @TILEDARRAY_ALIGNMENT@

/* Define the size of the CPU L1 cache lines. */
#cmakedefine TILEDARRAY_CACHELINE_SIZE @TILEDARRAY_CACHELINE_SIZE@

/* Define if MADNESS configured with Elemental support */
#cmakedefine TILEDARRAY_HAS_ELEMENTAL 1

/* Add macro TILEDARRAY_FORCE_INLINE which does as the name implies. */
#if defined(_MSC_VER) || defined(__INTEL_COMPILER)

#define TILEDARRAY_FORCE_INLINE __forceinline

#elif defined(__clang__)

#define TILEDARRAY_FORCE_INLINE __attribute__((always_inline)) inline

#elif defined(__GNUC__)

#if (__GNUC__ >= 4)
#define TILEDARRAY_FORCE_INLINE __attribute__((always_inline)) inline
#else
#define TILEDARRAY_FORCE_INLINE inline
#endif // (__GNUC__ >= 4)

#else

#define TILEDARRAY_FORCE_INLINE inline

#endif

/* Add macro TILEDARRAY_ALIGNED_STORAGE which forces alignment of variables */
#if defined(__clang__) || defined(__GNUC__) || defined(__PGI) || defined(__IBMCPP__) || defined(__ARMCC_VERSION)

#define TILEDARRAY_ALIGNED_STORAGE __attribute__((aligned(TILEDARRAY_ALIGNMENT)))

#elif (defined _MSC_VER)

#define TILEDARRAY_ALIGNED_STORAGE __declspec(align(TILEDARRAY_ALIGNMENT))

#else

#define TILEDARRAY_ALIGNED_STORAGE
#warning FIXEME!!! TiledArray alignment attribute is not definded for this platform.

#endif

#endif // TILEDARRAY_CONFIG_H__INCLUDED
